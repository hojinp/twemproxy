// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oscm_server.proto

#ifndef PROTOBUF_INCLUDED_oscm_5fserver_2eproto
#define PROTOBUF_INCLUDED_oscm_5fserver_2eproto

#include <string.h>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_oscm_5fserver_2eproto 

namespace protobuf_oscm_5fserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_oscm_5fserver_2eproto
class DeleteParam;
class DeleteParamDefaultTypeInternal;
extern DeleteParamDefaultTypeInternal _DeleteParam_default_instance_;
class DeleteReturn;
class DeleteReturnDefaultTypeInternal;
extern DeleteReturnDefaultTypeInternal _DeleteReturn_default_instance_;
class GetParam;
class GetParamDefaultTypeInternal;
extern GetParamDefaultTypeInternal _GetParam_default_instance_;
class GetReturn;
class GetReturnDefaultTypeInternal;
extern GetReturnDefaultTypeInternal _GetReturn_default_instance_;
class PutParam;
class PutParamDefaultTypeInternal;
extern PutParamDefaultTypeInternal _PutParam_default_instance_;
class PutReturn;
class PutReturnDefaultTypeInternal;
extern PutReturnDefaultTypeInternal _PutReturn_default_instance_;
namespace google {
namespace protobuf {
template<> ::DeleteParam* Arena::CreateMaybeMessage<::DeleteParam>(Arena*);
template<> ::DeleteReturn* Arena::CreateMaybeMessage<::DeleteReturn>(Arena*);
template<> ::GetParam* Arena::CreateMaybeMessage<::GetParam>(Arena*);
template<> ::GetReturn* Arena::CreateMaybeMessage<::GetReturn>(Arena*);
template<> ::PutParam* Arena::CreateMaybeMessage<::PutParam>(Arena*);
template<> ::PutReturn* Arena::CreateMaybeMessage<::PutReturn>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class GetParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetParam) */ {
 public:
  GetParam();
  virtual ~GetParam();

  GetParam(const GetParam& from);

  inline GetParam& operator=(const GetParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetParam(GetParam&& from) noexcept
    : GetParam() {
    *this = ::std::move(from);
  }

  inline GetParam& operator=(GetParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetParam* internal_default_instance() {
    return reinterpret_cast<const GetParam*>(
               &_GetParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GetParam* other);
  friend void swap(GetParam& a, GetParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetParam* New() const final {
    return CreateMaybeMessage<GetParam>(NULL);
  }

  GetParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetParam& from);
  void MergeFrom(const GetParam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:GetParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetReturn) */ {
 public:
  GetReturn();
  virtual ~GetReturn();

  GetReturn(const GetReturn& from);

  inline GetReturn& operator=(const GetReturn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReturn(GetReturn&& from) noexcept
    : GetReturn() {
    *this = ::std::move(from);
  }

  inline GetReturn& operator=(GetReturn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetReturn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetReturn* internal_default_instance() {
    return reinterpret_cast<const GetReturn*>(
               &_GetReturn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetReturn* other);
  friend void swap(GetReturn& a, GetReturn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReturn* New() const final {
    return CreateMaybeMessage<GetReturn>(NULL);
  }

  GetReturn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetReturn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetReturn& from);
  void MergeFrom(const GetReturn& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string blockId = 2;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 2;
  const ::std::string& blockid() const;
  void set_blockid(const ::std::string& value);
  #if LANG_CXX11
  void set_blockid(::std::string&& value);
  #endif
  void set_blockid(const char* value);
  void set_blockid(const char* value, size_t size);
  ::std::string* mutable_blockid();
  ::std::string* release_blockid();
  void set_allocated_blockid(::std::string* blockid);

  // bool exists = 1;
  void clear_exists();
  static const int kExistsFieldNumber = 1;
  bool exists() const;
  void set_exists(bool value);

  // int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blockid_;
  bool exists_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PutParam) */ {
 public:
  PutParam();
  virtual ~PutParam();

  PutParam(const PutParam& from);

  inline PutParam& operator=(const PutParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutParam(PutParam&& from) noexcept
    : PutParam() {
    *this = ::std::move(from);
  }

  inline PutParam& operator=(PutParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PutParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutParam* internal_default_instance() {
    return reinterpret_cast<const PutParam*>(
               &_PutParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PutParam* other);
  friend void swap(PutParam& a, PutParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutParam* New() const final {
    return CreateMaybeMessage<PutParam>(NULL);
  }

  PutParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutParam& from);
  void MergeFrom(const PutParam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string blockId = 1;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 1;
  const ::std::string& blockid() const;
  void set_blockid(const ::std::string& value);
  #if LANG_CXX11
  void set_blockid(::std::string&& value);
  #endif
  void set_blockid(const char* value);
  void set_blockid(const char* value, size_t size);
  ::std::string* mutable_blockid();
  ::std::string* release_blockid();
  void set_allocated_blockid(::std::string* blockid);

  // string blockInfo = 2;
  void clear_blockinfo();
  static const int kBlockInfoFieldNumber = 2;
  const ::std::string& blockinfo() const;
  void set_blockinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_blockinfo(::std::string&& value);
  #endif
  void set_blockinfo(const char* value);
  void set_blockinfo(const char* value, size_t size);
  ::std::string* mutable_blockinfo();
  ::std::string* release_blockinfo();
  void set_allocated_blockinfo(::std::string* blockinfo);

  // @@protoc_insertion_point(class_scope:PutParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blockid_;
  ::google::protobuf::internal::ArenaStringPtr blockinfo_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PutReturn) */ {
 public:
  PutReturn();
  virtual ~PutReturn();

  PutReturn(const PutReturn& from);

  inline PutReturn& operator=(const PutReturn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutReturn(PutReturn&& from) noexcept
    : PutReturn() {
    *this = ::std::move(from);
  }

  inline PutReturn& operator=(PutReturn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PutReturn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PutReturn* internal_default_instance() {
    return reinterpret_cast<const PutReturn*>(
               &_PutReturn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PutReturn* other);
  friend void swap(PutReturn& a, PutReturn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutReturn* New() const final {
    return CreateMaybeMessage<PutReturn>(NULL);
  }

  PutReturn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PutReturn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PutReturn& from);
  void MergeFrom(const PutReturn& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PutReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeleteParam) */ {
 public:
  DeleteParam();
  virtual ~DeleteParam();

  DeleteParam(const DeleteParam& from);

  inline DeleteParam& operator=(const DeleteParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteParam(DeleteParam&& from) noexcept
    : DeleteParam() {
    *this = ::std::move(from);
  }

  inline DeleteParam& operator=(DeleteParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteParam* internal_default_instance() {
    return reinterpret_cast<const DeleteParam*>(
               &_DeleteParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DeleteParam* other);
  friend void swap(DeleteParam& a, DeleteParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteParam* New() const final {
    return CreateMaybeMessage<DeleteParam>(NULL);
  }

  DeleteParam* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteParam>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteParam& from);
  void MergeFrom(const DeleteParam& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:DeleteParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteReturn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeleteReturn) */ {
 public:
  DeleteReturn();
  virtual ~DeleteReturn();

  DeleteReturn(const DeleteReturn& from);

  inline DeleteReturn& operator=(const DeleteReturn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteReturn(DeleteReturn&& from) noexcept
    : DeleteReturn() {
    *this = ::std::move(from);
  }

  inline DeleteReturn& operator=(DeleteReturn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteReturn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteReturn* internal_default_instance() {
    return reinterpret_cast<const DeleteReturn*>(
               &_DeleteReturn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(DeleteReturn* other);
  friend void swap(DeleteReturn& a, DeleteReturn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteReturn* New() const final {
    return CreateMaybeMessage<DeleteReturn>(NULL);
  }

  DeleteReturn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteReturn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteReturn& from);
  void MergeFrom(const DeleteReturn& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteReturn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DeleteReturn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_oscm_5fserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetParam

// string key = 1;
inline void GetParam::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetParam::key() const {
  // @@protoc_insertion_point(field_get:GetParam.key)
  return key_.GetNoArena();
}
inline void GetParam::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetParam.key)
}
#if LANG_CXX11
inline void GetParam::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetParam.key)
}
#endif
inline void GetParam::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetParam.key)
}
inline void GetParam::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetParam.key)
}
inline ::std::string* GetParam::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:GetParam.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetParam::release_key() {
  // @@protoc_insertion_point(field_release:GetParam.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetParam::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:GetParam.key)
}

// -------------------------------------------------------------------

// GetReturn

// bool exists = 1;
inline void GetReturn::clear_exists() {
  exists_ = false;
}
inline bool GetReturn::exists() const {
  // @@protoc_insertion_point(field_get:GetReturn.exists)
  return exists_;
}
inline void GetReturn::set_exists(bool value) {
  
  exists_ = value;
  // @@protoc_insertion_point(field_set:GetReturn.exists)
}

// string blockId = 2;
inline void GetReturn::clear_blockid() {
  blockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetReturn::blockid() const {
  // @@protoc_insertion_point(field_get:GetReturn.blockId)
  return blockid_.GetNoArena();
}
inline void GetReturn::set_blockid(const ::std::string& value) {
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetReturn.blockId)
}
#if LANG_CXX11
inline void GetReturn::set_blockid(::std::string&& value) {
  
  blockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetReturn.blockId)
}
#endif
inline void GetReturn::set_blockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetReturn.blockId)
}
inline void GetReturn::set_blockid(const char* value, size_t size) {
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetReturn.blockId)
}
inline ::std::string* GetReturn::mutable_blockid() {
  
  // @@protoc_insertion_point(field_mutable:GetReturn.blockId)
  return blockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetReturn::release_blockid() {
  // @@protoc_insertion_point(field_release:GetReturn.blockId)
  
  return blockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetReturn::set_allocated_blockid(::std::string* blockid) {
  if (blockid != NULL) {
    
  } else {
    
  }
  blockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockid);
  // @@protoc_insertion_point(field_set_allocated:GetReturn.blockId)
}

// int32 offset = 3;
inline void GetReturn::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 GetReturn::offset() const {
  // @@protoc_insertion_point(field_get:GetReturn.offset)
  return offset_;
}
inline void GetReturn::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:GetReturn.offset)
}

// int32 size = 4;
inline void GetReturn::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 GetReturn::size() const {
  // @@protoc_insertion_point(field_get:GetReturn.size)
  return size_;
}
inline void GetReturn::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:GetReturn.size)
}

// -------------------------------------------------------------------

// PutParam

// string blockId = 1;
inline void PutParam::clear_blockid() {
  blockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutParam::blockid() const {
  // @@protoc_insertion_point(field_get:PutParam.blockId)
  return blockid_.GetNoArena();
}
inline void PutParam::set_blockid(const ::std::string& value) {
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PutParam.blockId)
}
#if LANG_CXX11
inline void PutParam::set_blockid(::std::string&& value) {
  
  blockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PutParam.blockId)
}
#endif
inline void PutParam::set_blockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PutParam.blockId)
}
inline void PutParam::set_blockid(const char* value, size_t size) {
  
  blockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PutParam.blockId)
}
inline ::std::string* PutParam::mutable_blockid() {
  
  // @@protoc_insertion_point(field_mutable:PutParam.blockId)
  return blockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutParam::release_blockid() {
  // @@protoc_insertion_point(field_release:PutParam.blockId)
  
  return blockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutParam::set_allocated_blockid(::std::string* blockid) {
  if (blockid != NULL) {
    
  } else {
    
  }
  blockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockid);
  // @@protoc_insertion_point(field_set_allocated:PutParam.blockId)
}

// string blockInfo = 2;
inline void PutParam::clear_blockinfo() {
  blockinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutParam::blockinfo() const {
  // @@protoc_insertion_point(field_get:PutParam.blockInfo)
  return blockinfo_.GetNoArena();
}
inline void PutParam::set_blockinfo(const ::std::string& value) {
  
  blockinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PutParam.blockInfo)
}
#if LANG_CXX11
inline void PutParam::set_blockinfo(::std::string&& value) {
  
  blockinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PutParam.blockInfo)
}
#endif
inline void PutParam::set_blockinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  blockinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PutParam.blockInfo)
}
inline void PutParam::set_blockinfo(const char* value, size_t size) {
  
  blockinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PutParam.blockInfo)
}
inline ::std::string* PutParam::mutable_blockinfo() {
  
  // @@protoc_insertion_point(field_mutable:PutParam.blockInfo)
  return blockinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutParam::release_blockinfo() {
  // @@protoc_insertion_point(field_release:PutParam.blockInfo)
  
  return blockinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutParam::set_allocated_blockinfo(::std::string* blockinfo) {
  if (blockinfo != NULL) {
    
  } else {
    
  }
  blockinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockinfo);
  // @@protoc_insertion_point(field_set_allocated:PutParam.blockInfo)
}

// -------------------------------------------------------------------

// PutReturn

// -------------------------------------------------------------------

// DeleteParam

// string key = 1;
inline void DeleteParam::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteParam::key() const {
  // @@protoc_insertion_point(field_get:DeleteParam.key)
  return key_.GetNoArena();
}
inline void DeleteParam::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeleteParam.key)
}
#if LANG_CXX11
inline void DeleteParam::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeleteParam.key)
}
#endif
inline void DeleteParam::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeleteParam.key)
}
inline void DeleteParam::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeleteParam.key)
}
inline ::std::string* DeleteParam::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:DeleteParam.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteParam::release_key() {
  // @@protoc_insertion_point(field_release:DeleteParam.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteParam::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:DeleteParam.key)
}

// -------------------------------------------------------------------

// DeleteReturn

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_oscm_5fserver_2eproto
